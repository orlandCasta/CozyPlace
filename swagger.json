{
  "swagger": "2.0",
  "info": {
    "description": "On this site you can make publications about experiences, upload photos and attach a description about your experience, it is a personalized experience since you can create your user, modify your information and post made.",
    "version": "1.0.0",
    "title": "CozyPlace",
    "contact": {
      "email": "orlandos.casta@gmail.com"
    }
  },
  "tags": [
    {
      "name": "post",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/post/create": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "CREATE POST",
        "description": "ROUTE TO CREATE POSTS",
        "operationId": "addPet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "json_web_token": []
          }
        ]
      }
    },
    "/post/": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "SHOW ALL POSTS",
        "description": "ROUTE TO SHOW ALL POSTS",
        "operationId": "showAllPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/show/home": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "SEARCH POSTS",
        "description": "ROUTE TO SEARCH POSTS FOR LOCATION",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "location",
            "description": "it is necessary to enter the location",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/show/topLocations": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "GET LOCATIONS",
        "description": "ROUTE TO GET TOP LOCATIONS THIS IS THE ROUTE FOR MAP, THIS ROUTE RESPONSE WHIT 4 LOCATIONS",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/post/{id}": {
      "put": {
        "tags": [
          "post"
        ],
        "summary": "UPDATE POST",
        "description": "PATH FOR UPDATE POST.",
        "operationId": "updatePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the post to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "modify only the fields you want to edit/update",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid post supplied"
          },
          "404": {
            "description": "Post not found"
          }
        },
        "security": [
          {
            "json_web_token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "post"
        ],
        "summary": "DELETE POST",
        "description": "ROUTE FOR DELETE POST",
        "operationId": "deletePost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Post not found"
          }
        },
        "security": [
          {
            "json_web_token": []
          }
        ]
      },
      "get": {
        "tags": [
          "post"
        ],
        "summary": "SHOW POST",
        "description": "ROUTE FOR SHOW BY ID",
        "operationId": "showPostByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "CREATE USER",
        "description": "PATH TO CREATE USER",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "USER CREATED",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "LOGIN USER",
        "description": "PATH LOGIN USER",
        "operationId": "Login user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Login success"
                },
                "token": {
                  "type": "string",
                  "description": "Json web token"
                }
              }
            }
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "SHOW ALL USERS",
        "description": "PATH FOR SHOW ALL USERS",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "SHOW USER FOR ID",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Message of error ocurred"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "UPDATE USER",
        "description": "PATH FOR UPDATE USER.",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "if o user that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object is NOT necesary send everything, just the things that you want to update",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "json_web_token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "DELETE USER",
        "description": "PATH FOR DELETE USER.",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of user that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User {id} deleted"
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "json_web_token": []
          }
        ]
      }
    },
    "/user/postsuser/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "SHOW POSTS USER",
        "description": "ROUTE TO SHOW USER POST",
        "operationId": "getUserPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Message of error ocurred"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "json_web_token": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "fullname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "date": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "rating": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}